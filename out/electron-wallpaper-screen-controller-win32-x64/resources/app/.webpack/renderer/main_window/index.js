!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t){e.exports=require("electron")},function(e,t,r){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(0));t.CHANNEL="wallpapers",t.FILE_STORAGE_APPENDIX="-file",t.Display2StorageKey=function(e){return e.toString()+t.FILE_STORAGE_APPENDIX};var a=new RegExp("^(?<displayId>[0-9]+)("+t.FILE_STORAGE_APPENDIX+")$");t.StorageKey2Display=function(e){var r=a.exec(e);if(r.groups.displayId)return Number.parseInt(r.groups.displayId);throw new Error("Storage key must start with display id and end with "+t.FILE_STORAGE_APPENDIX+", not: "+e)},t.IsStorageKey=function(e){return a.test(e)},t.default=o.ipcRenderer},,,function(e,t,r){e.exports=r(5)},function(e,t,r){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(6)),a=n(r(1)),i=function(){function e(){}return e.start=function(){e.loadWallpapers(),document.querySelectorAll("input").forEach((function(e){e.addEventListener("change",(function(){o.default.send(o.CHANNEL,e.id,e.checked?"show":"hide")}))}))},e.loadWallpapers=function(){var e=window.localStorage;console.log("MainWindow.loadWallpapers(): storages "+e.length);for(var t=0;t<e.length;t+=1){var r=e.key(t);if(console.log("MainWindow.loadWallpapers(): try #"+t+" "+r+" = "+a.IsStorageKey(r)),a.IsStorageKey(r)){var n=e.getItem(r);console.log("MainWindow.loadWallpapers(): "+r+" = "+n),a.default.send(a.CHANNEL,a.StorageKey2Display(r),"load",n)}}},e}();i.start(),t.default=i},function(e,t,r){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=n(r(0));t.CHANNEL="windows",t.default=o.ipcRenderer}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZWxlY3Ryb25cIiIsIndlYnBhY2s6Ly8vLi9zcmMvaW5mcmFzdHJ1Y3R1cmUvV2FsbHBhcGVyc01hbmFnZXIuaXBjLnRzIiwid2VicGFjazovLy8uL3NyYy9pbmZyYXN0cnVjdHVyZS9NYWluV2luZG93LnRzIiwid2VicGFjazovLy8uL3NyYy9pbmZyYXN0cnVjdHVyZS9XaW5kb3dzLmlwYy50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJlcXVpcmUiLCJDSEFOTkVMIiwiRklMRV9TVE9SQUdFX0FQUEVORElYIiwiRGlzcGxheTJTdG9yYWdlS2V5IiwiZGlzcGxheUlkIiwidG9TdHJpbmciLCJTVE9SQUdFX0tFWV9SRUdFWCIsIlJlZ0V4cCIsIlN0b3JhZ2VLZXkyRGlzcGxheSIsInN0b3JhZ2VLZXkiLCJtYXRjaGVzIiwiZXhlYyIsImdyb3VwcyIsIk51bWJlciIsInBhcnNlSW50IiwiRXJyb3IiLCJJc1N0b3JhZ2VLZXkiLCJ0ZXN0IiwiZWxlY3Ryb24iLCJpcGNSZW5kZXJlciIsInN0YXJ0IiwiTWFpbldpbmRvdyIsImxvYWRXYWxscGFwZXJzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIndpbmRvd0NoZWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlbmQiLCJpZCIsImNoZWNrZWQiLCJzdG9yYWdlIiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiY29uc29sZSIsImxvZyIsImxlbmd0aCIsImZpbGVSZWNvcmQiLCJnZXRJdGVtIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVBQVNTLEVBQU0sQ0FBRUssWUFBWSxFQUFNQyxJQUFLTCxLQUtoRVosRUFBb0JrQixFQUFJLFNBQVNoQixHQUNYLG9CQUFYaUIsUUFBMEJBLE9BQU9DLGFBQzFDTixPQUFPQyxlQUFlYixFQUFTaUIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEUCxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sS0FRdkRyQixFQUFvQnNCLEVBQUksU0FBU0QsRUFBT0UsR0FFdkMsR0FEVSxFQUFQQSxJQUFVRixFQUFRckIsRUFBb0JxQixJQUMvQixFQUFQRSxFQUFVLE9BQU9GLEVBQ3BCLEdBQVcsRUFBUEUsR0FBOEIsaUJBQVZGLEdBQXNCQSxHQUFTQSxFQUFNRyxXQUFZLE9BQU9ILEVBQ2hGLElBQUlJLEVBQUtYLE9BQU9ZLE9BQU8sTUFHdkIsR0FGQTFCLEVBQW9Ca0IsRUFBRU8sR0FDdEJYLE9BQU9DLGVBQWVVLEVBQUksVUFBVyxDQUFFVCxZQUFZLEVBQU1LLE1BQU9BLElBQ3RELEVBQVBFLEdBQTRCLGlCQUFURixFQUFtQixJQUFJLElBQUlNLEtBQU9OLEVBQU9yQixFQUFvQlUsRUFBRWUsRUFBSUUsRUFBSyxTQUFTQSxHQUFPLE9BQU9OLEVBQU1NLElBQVFDLEtBQUssS0FBTUQsSUFDOUksT0FBT0YsR0FJUnpCLEVBQW9CNkIsRUFBSSxTQUFTMUIsR0FDaEMsSUFBSVMsRUFBU1QsR0FBVUEsRUFBT3FCLFdBQzdCLFdBQXdCLE9BQU9yQixFQUFnQixTQUMvQyxXQUE4QixPQUFPQSxHQUV0QyxPQURBSCxFQUFvQlUsRUFBRUUsRUFBUSxJQUFLQSxHQUM1QkEsR0FJUlosRUFBb0JhLEVBQUksU0FBU2lCLEVBQVFDLEdBQVksT0FBT2pCLE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3VCLEVBQVFDLElBR3pHL0IsRUFBb0JrQyxFQUFJLEdBSWpCbEMsRUFBb0JBLEVBQW9CbUMsRUFBSSxHLGdCQ2xGckRoQyxFQUFPRCxRQUFVa0MsUUFBUSxhLDJQQ0F6QixjQUlhLEVBQUFDLFFBQW1CLGFBR25CLEVBQUFDLHNCQUF3QixRQUV4QixFQUFBQyxtQkFBcUIsU0FBQ0MsR0FDL0IsT0FBT0EsRUFBVUMsV0FBYSxFQUFBSCx1QkFHbEMsSUFBTUksRUFBb0IsSUFBSUMsT0FBUSx5QkFBeUIsRUFBQUwsc0JBQXFCLE1BRXZFLEVBQUFNLG1CQUFxQixTQUFDQyxHQUMvQixJQUFNQyxFQUFVSixFQUFrQkssS0FBS0YsR0FFdkMsR0FBSUMsRUFBUUUsT0FBT1IsVUFDZixPQUFPUyxPQUFPQyxTQUFTSixFQUFRRSxPQUFPUixXQUUxQyxNQUFNLElBQUlXLE1BQU0sdURBQXVELEVBQUFiLHNCQUFxQixVQUFVTyxJQUc3RixFQUFBTyxhQUFlLFNBQUNQLEdBQWdDLE9BQUFILEVBQWtCVyxLQUFLUixJQU1wRixVQUFlUyxFQUFTQyxhLDZSQzlCeEIsY0FDQSxVQUdBLDJCQW1DQSxPQWpDVyxFQUFBQyxNQUFQLFdBQ0lDLEVBQVdDLGlCQUlYQyxTQUFTQyxpQkFBaUIsU0FBU0MsU0FDL0IsU0FBQ0MsR0FDR0EsRUFBWUMsaUJBQWlCLFVBQVUsV0FDbkMsVUFBV0MsS0FBSyxVQUFnQkYsRUFBWUcsR0FBZUgsRUFBWUksUUFBVSxPQUFTLGVBTTNGLEVBQUFSLGVBQWYsV0FDSSxJQUFNUyxFQUFVQyxPQUFPQyxhQUN2QkMsUUFBUUMsSUFBSSx5Q0FBeUNKLEVBQVFLLFFBQzdELElBQUssSUFBSXBFLEVBQUksRUFBR0EsRUFBSStELEVBQVFLLE9BQVFwRSxHQUFLLEVBQUcsQ0FDeEMsSUFBTXVCLEVBQU13QyxFQUFReEMsSUFBSXZCLEdBRXhCLEdBREFrRSxRQUFRQyxJQUFJLHFDQUFxQ25FLEVBQUMsSUFBSXVCLEVBQUcsTUFBTSxFQUFBeUIsYUFBYXpCLElBQ3hFLEVBQUF5QixhQUFhekIsR0FBTSxDQUNuQixJQUFNOEMsRUFBYU4sRUFBUU8sUUFBUS9DLEdBQ25DMkMsUUFBUUMsSUFBSSxnQ0FBZ0M1QyxFQUFHLE1BQU04QyxHQUNyRCxVQUFjVCxLQUNWLFVBQ0EsRUFBQXBCLG1CQUFvQmpCLEdBQ3BCLE9BQ0E4QyxNQU1wQixFQW5DQSxHQXFDQWhCLEVBQVdELFFBRVgsVUFBZUMsRywyUEMzQ2YsY0FJYSxFQUFBcEIsUUFBbUIsVUFRaEMsVUFBZWlCLEVBQVNDIiwiZmlsZSI6Im1haW5fd2luZG93L2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDQpO1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlY3Ryb25cIik7IiwiaW1wb3J0ICogYXMgZWxlY3Ryb24gZnJvbSAnZWxlY3Ryb24nO1xyXG5cclxudHlwZSBDaGFubmVsID0gJ3dhbGxwYXBlcnMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IENIQU5ORUw6IENoYW5uZWwgPSAnd2FsbHBhcGVycyc7XHJcbmV4cG9ydCB0eXBlIENvbW1hbmRzID0gJ2xvYWQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJTEVfU1RPUkFHRV9BUFBFTkRJWCA9ICctZmlsZSc7XHJcblxyXG5leHBvcnQgY29uc3QgRGlzcGxheTJTdG9yYWdlS2V5ID0gKGRpc3BsYXlJZDogbnVtYmVyKTogc3RyaW5nID0+IHtcclxuICAgIHJldHVybiBkaXNwbGF5SWQudG9TdHJpbmcoKSArIEZJTEVfU1RPUkFHRV9BUFBFTkRJWDtcclxufTtcclxuXHJcbmNvbnN0IFNUT1JBR0VfS0VZX1JFR0VYID0gbmV3IFJlZ0V4cCggYF4oPzxkaXNwbGF5SWQ+WzAtOV0rKSgke0ZJTEVfU1RPUkFHRV9BUFBFTkRJWH0pJGAgKTtcclxuXHJcbmV4cG9ydCBjb25zdCBTdG9yYWdlS2V5MkRpc3BsYXkgPSAoc3RvcmFnZUtleTogc3RyaW5nKTogbnVtYmVyID0+IHtcclxuICAgIGNvbnN0IG1hdGNoZXMgPSBTVE9SQUdFX0tFWV9SRUdFWC5leGVjKHN0b3JhZ2VLZXkpO1xyXG5cclxuICAgIGlmIChtYXRjaGVzLmdyb3Vwcy5kaXNwbGF5SWQpIHtcclxuICAgICAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KG1hdGNoZXMuZ3JvdXBzLmRpc3BsYXlJZCk7XHJcbiAgICB9XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFN0b3JhZ2Uga2V5IG11c3Qgc3RhcnQgd2l0aCBkaXNwbGF5IGlkIGFuZCBlbmQgd2l0aCAke0ZJTEVfU1RPUkFHRV9BUFBFTkRJWH0sIG5vdDogJHtzdG9yYWdlS2V5fWApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IElzU3RvcmFnZUtleSA9IChzdG9yYWdlS2V5OiBzdHJpbmcpOiBib29sZWFuID0+IFNUT1JBR0VfS0VZX1JFR0VYLnRlc3Qoc3RvcmFnZUtleSk7XHJcblxyXG5pbnRlcmZhY2UgV2FsbHBhcGVyc01hbmFnZXJJcGNSZW5kZXJlciBleHRlbmRzIGVsZWN0cm9uLklwY1JlbmRlcmVyIHtcclxuICAgIHNlbmQoY2hhbm5lbDogQ2hhbm5lbCwgZGlzcGxheUlkOiBudW1iZXIsIGNvbW1hbmQ6IENvbW1hbmRzLCBmaWxlPzogc3RyaW5nKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZWxlY3Ryb24uaXBjUmVuZGVyZXIgYXMgV2FsbHBhcGVyc01hbmFnZXJJcGNSZW5kZXJlcjtcclxuIiwiaW1wb3J0IHdpbmRvd3NJcGMsIHsgQ0hBTk5FTCBhcyB3aW5kb3dzQ0hBTk5FTCwgV2luZG93cyB9IGZyb20gJy4vV2luZG93cy5pcGMnO1xyXG5pbXBvcnQgd2FsbHBhcGVyc0lwYywgeyBDSEFOTkVMIGFzIHdhbGxwYXBlcnNDSEFOTkVMLCBJc1N0b3JhZ2VLZXksIFN0b3JhZ2VLZXkyRGlzcGxheSB9IGZyb20gJy4vV2FsbHBhcGVyc01hbmFnZXIuaXBjJztcclxuaW1wb3J0IHsgRGVidWdnZXIgfSBmcm9tICdlbGVjdHJvbic7XHJcblxyXG5jbGFzcyBNYWluV2luZG93IHtcclxuXHJcbiAgICBzdGF0aWMgc3RhcnQoKTogdm9pZCB7XHJcbiAgICAgICAgTWFpbldpbmRvdy5sb2FkV2FsbHBhcGVycygpO1xyXG5cclxuICAgICAgICAvLyBNYWluV2luZG93LmxvYWRXYWxscGFwZXJzKCk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0JykuZm9yRWFjaChcclxuICAgICAgICAgICAgKHdpbmRvd0NoZWNrOiBIVE1MSW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3dDaGVjay5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93c0lwYy5zZW5kKHdpbmRvd3NDSEFOTkVMLCB3aW5kb3dDaGVjay5pZCBhcyBXaW5kb3dzLCB3aW5kb3dDaGVjay5jaGVja2VkID8gJ3Nob3cnIDogJ2hpZGUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIGxvYWRXYWxscGFwZXJzKCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBNYWluV2luZG93LmxvYWRXYWxscGFwZXJzKCk6IHN0b3JhZ2VzICR7c3RvcmFnZS5sZW5ndGh9YCk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdG9yYWdlLmxlbmd0aDsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IHN0b3JhZ2Uua2V5KGkpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgTWFpbldpbmRvdy5sb2FkV2FsbHBhcGVycygpOiB0cnkgIyR7aX0gJHtrZXl9ID0gJHtJc1N0b3JhZ2VLZXkoa2V5KX1gKTtcclxuICAgICAgICAgICAgaWYgKElzU3RvcmFnZUtleShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlUmVjb3JkID0gc3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgTWFpbldpbmRvdy5sb2FkV2FsbHBhcGVycygpOiAke2tleX0gPSAke2ZpbGVSZWNvcmR9YCk7XHJcbiAgICAgICAgICAgICAgICB3YWxscGFwZXJzSXBjLnNlbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgd2FsbHBhcGVyc0NIQU5ORUwsXHJcbiAgICAgICAgICAgICAgICAgICAgU3RvcmFnZUtleTJEaXNwbGF5KCBrZXkgKSxcclxuICAgICAgICAgICAgICAgICAgICAnbG9hZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZmlsZVJlY29yZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuTWFpbldpbmRvdy5zdGFydCgpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFpbldpbmRvdztcclxuIiwiaW1wb3J0ICogYXMgZWxlY3Ryb24gZnJvbSAnZWxlY3Ryb24nO1xyXG5cclxudHlwZSBDaGFubmVsID0gJ3dpbmRvd3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IENIQU5ORUw6IENoYW5uZWwgPSAnd2luZG93cyc7XHJcbmV4cG9ydCB0eXBlIFdpbmRvd3MgPSAnU2NyZWVuTWFuYWdlcicgfCAnTWFpbldpbmRvdyc7XHJcbmV4cG9ydCB0eXBlIENvbW1hbmRzID0gJ3Nob3cnIHwgJ2hpZGUnO1xyXG5cclxuaW50ZXJmYWNlIFdpbmRvd0lwY1JlbmRlcmVyIGV4dGVuZHMgZWxlY3Ryb24uSXBjUmVuZGVyZXIge1xyXG4gICAgc2VuZChjaGFubmVsOiBDaGFubmVsLCB3aW5kb3c6IFdpbmRvd3MsIGNvbW1hbmQ6IENvbW1hbmRzKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZWxlY3Ryb24uaXBjUmVuZGVyZXIgYXMgV2luZG93SXBjUmVuZGVyZXI7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=