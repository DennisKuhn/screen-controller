{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/infrastructure/ConfigController.ts","webpack:///./src/infrastructure/preload.ts","webpack:///external \"crypto\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"url\""],"names":[],"mappings":"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","file":"preload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/infrastructure/preload.ts\");\n","import { ipcRenderer } from 'electron';\r\nimport crypto from 'crypto';\r\nimport url, { URL } from 'url';\r\nimport fs from 'fs';\r\n\r\nclass ConfigOption {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nclass ConfigProperty {\r\n    condition: string;\r\n    order: number;\r\n    text: string;\r\n    type: string;\r\n    max: number;\r\n    min: number;\r\n    value: string;\r\n    options: ConfigOption[];\r\n}\r\n\r\nclass ConfigSettings {\r\n\r\n    baseUrl: URL;\r\n    baseId: string;\r\n    displayId: number;\r\n\r\n    configId: string;\r\n\r\n    config;\r\n    userProperties;\r\n\r\n    /**\r\n     * \r\n     */\r\n    constructor(displayId: number, baseUrl: URL) {\r\n        this.baseUrl = baseUrl; // url.pathToFileURL(file);\r\n\r\n        this.baseId = crypto.createHash('md5').update(this.baseUrl.href).digest('hex');\r\n\r\n        this.displayId = displayId;\r\n\r\n        this.configId = `${this.displayId}-${this.baseId}-config`;\r\n\r\n        console.log(`${this.constructor.name}(): ${this.configId} = ${this.displayId} + ${this.baseId} (${this.baseUrl.href})`);\r\n\r\n        this.loadConfig();\r\n    }\r\n\r\n    loadConfig(): void {\r\n        console.log(`${this.constructor.name}: ${this.configId}`);\r\n        const configString = localStorage.getItem(this.configId);\r\n\r\n        if (configString) {\r\n            try {\r\n                this.config = JSON.parse(configString);\r\n                this.userProperties = this.config.general.properties;\r\n\r\n                console.log(`${this.constructor.name}: ${this.configId}: loaded config`, this.userProperties, this.config);\r\n            } catch (loadConfigError) {\r\n                console.error(\r\n                    `${this.constructor.name}: ${this.configId}: Error parsing config JSON:${loadConfigError}: ${configString} file: ${this.baseUrl.href}`,\r\n                    loadConfigError,\r\n                    configString);\r\n            }\r\n        } else {\r\n            console.warn(`${this.constructor.name}: ${this.configId}: no config: ${this.baseUrl.href}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} file path\r\n     */\r\n    async loadDefault(): Promise<void> {\r\n        const defaultLocation = this.baseUrl.href.substring(0, this.baseUrl.href.lastIndexOf('/') + 1) + 'project.json';\r\n        const defaultPath = url.fileURLToPath(this.baseUrl.href.substring(0, this.baseUrl.href.lastIndexOf('/') + 1) + 'project.json');\r\n        console.log(`${this.constructor.name}: ${this.configId}: defaultLocation: ${defaultLocation} defaultPath: ${defaultPath} file: ${this.baseUrl.href}`);\r\n        try {\r\n            // const buffer = await fs.promises.readFile(defaultLocation);\r\n            const buffer = await fs.promises.readFile(defaultPath);\r\n            this.config = JSON.parse(buffer.toString());\r\n\r\n            this.userProperties = this.config.general.properties;\r\n\r\n            console.log(`${this.constructor.name}: ${this.configId}: loaded default`, this.userProperties, this.config);\r\n        } catch (loadError) {\r\n            console.error(\r\n                `${this.constructor.name}: ${this.configId}: ERROR loading default:${loadError}:${defaultLocation}`,\r\n                loadError,\r\n                defaultLocation);\r\n        }\r\n        if (this.config) {\r\n            try {\r\n                localStorage.setItem(this.configId, JSON.stringify(this.config));\r\n\r\n                console.log(`${this.constructor.name}: ${this.configId}: stored default`, this.config);\r\n            } catch (storeError) {\r\n                console.error(\r\n                    `${this.constructor.name}: ${this.configId}: ERROR storing default:${storeError}:${defaultLocation}`,\r\n                    storeError,\r\n                    defaultLocation);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Loads configuration from storage and provides interface to configuration updates through channel.\r\n * @module\r\n */\r\nclass ConfigController {\r\n\r\n    static settings: ConfigSettings[] = [];\r\n\r\n    static async getConfig(displayId: number, baseUrl: URL): Promise<any> {\r\n        let setting = ConfigController.settings.find(candidate => candidate.displayId == displayId && candidate.baseUrl == baseUrl);\r\n\r\n        if (!setting) {\r\n            setting = new ConfigSettings(displayId, baseUrl);\r\n            ConfigController.settings.push(setting);\r\n\r\n            if (!setting.config) {\r\n                await setting.loadDefault();\r\n            }\r\n        }\r\n        return setting.config;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    constructor() {\r\n        console.error(`${this.constructor.name}()`);\r\n    }\r\n\r\n    static start(): void {\r\n        // Get displayId from argV and url from window.locaiton.href\r\n        ConfigController.getConfig(\r\n            Number(\r\n                process.argv.find((arg) => {\r\n                    return /^--displayid=/.test(arg);\r\n                }).split('=')[1]),\r\n            url.parse(window.location.href, false, false)\r\n        ).then(\r\n            () => {\r\n                ConfigController.connectToWallpaper();\r\n            }\r\n        );\r\n    }\r\n\r\n    static listeners: { user: (settingText: string) => void};\r\n\r\n    static onNewSettings = async (e, settingText: string): Promise<void> => {\r\n        const setting = ConfigController.settings[0];\r\n\r\n        try {\r\n            const changedSettings = await JSON.parse(settingText);\r\n            ConfigController.listeners.user(changedSettings);\r\n        } catch (settingsError) {\r\n            console.error(\r\n                `ConfigController: ${setting.configId}: ERROR updating user setting:${settingsError}:${settingText}`,\r\n                settingsError,\r\n                settingText);\r\n        }\r\n    }\r\n\r\n    static registerPage = (listeners: { user: (settingText: string) => void }): void => {\r\n        const setting = ConfigController.settings[0];\r\n        \r\n        ConfigController.listeners = listeners;\r\n\r\n        console.log(\r\n            `ConfigController: ${setting.configId}: ${Object.keys(setting.userProperties).length}: register`,\r\n            listeners,\r\n            setting.userProperties);\r\n        if (ConfigController.listeners.user) {\r\n            try {\r\n                ConfigController.listeners.user(setting.userProperties);\r\n            } catch (initialError) {\r\n                console.error(\r\n                    `ConfigController: ${setting.configId}: ERROR initial user setting:${initialError}:`,\r\n                    initialError,\r\n                    setting.userProperties);\r\n            }\r\n            ipcRenderer.on(setting.configId + '-userSettings', ConfigController.onNewSettings);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exposes interface to wallpaper window, e.g. window.wallpaper.register(listeners)\r\n     */\r\n    static connectToWallpaper(): void {\r\n        // Expose protected methods that allow the renderer process to use\r\n        // the ipcRenderer without exposing the entire object\r\n        window.wallpaper = {\r\n            register: ConfigController.registerPage\r\n        };\r\n    }\r\n}\r\n\r\nexport default ConfigController;\r\n","import ConfigController from './ConfigController';\n\nconsole.log('preload included');\n\nprocess.once('loaded', () => {\n    ConfigController.start();\n});\n","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"url\");"],"sourceRoot":""}